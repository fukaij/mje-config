#eval compdef -n _parse_opts release_component
# ZSH function file
# Release component in SCM
#
# $Id: release_component,v 1.1 2002/05/10 11:11:52 mebourne Exp $

local -a components architectures
components=(/vobs/bpta/^lost+found(:t))
architectures=(/vobs/release/^lost+found(:t))

local -A opts
parse_opts - opts -- "$argv[@]" <<'EOF' || return 1
Description:
Release component in SCM

Usage:
release_component [options] <component> <version> <architecture>

Options:
  -h, --help			Provide this help
				# --help | -h * excludes=*

Arguments:
  <component>			The name of the component to release
				# component : values=components
  <version>			The version to release. eg. 00.00.07
				# version
  <architecture>		The architecture to release for
				# arch : values=architectures
EOF

if [[ $opts[version] != [0-9][0-9].[0-9][0-9].[0-9][0-9] ]]
then
  echo "Invalid format for version. Must be of the form 00.01.02" 1>&2
  return 1
fi

echo "Releasing compenent $opts[component] on $opts[arch] as version $opts[version]"

echo
echo "Enter release comment followed by newline:"
local comment=""
read comment

local label="$opts[component]_$opts[version]"

echo
echo "Creating label..."
create_label -t release -c \"${comment}\" $opts[component] $opts[version] || return

echo
echo "Attaching label..."
cleartool mklabel $label /vobs/bpta || return
cleartool mklabel -r $label /vobs/bpta/$opts[component] || return

echo
echo "Running abe..."
abe.pl -vob /vobs/bpta -c $opts[component] -l $label -a $opts[arch] || return

echo "Finished"
