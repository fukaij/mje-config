# ZSH function file
# Load a package which is part of the configuration system
# Usage: package [-e] [-i] [-L] [<package-name>]
#
# $Id: package,v 1.4 2001/05/09 12:06:23 mebourne Exp $

local package=$argv[1]
integer list=$((ARGC==0)) examine=0 longlist=0 ignoreduplicate=0
while (( ARGC ))
do
  case $argv[1] in
    -e)
      examine=1
      shift
      ;;

    -i)
      ignoreduplicate=1
      shift
      ;;

    -L)
      longlist=1
      shift
      ;;
  
    -*)
      echo "ERROR: Invalid option $argv[1]" 1>&2
      return 1
      ;;
  
    *)
      package=$argv[1]
      shift
      if (( ARGC ))
      then
        echo "ERROR: Invalid argument $argv[1]" 1>&2
	return 1
      fi
      ;;
  esac
done

if (( list ))
then
  # Display list of loaded packages (sort them)
  echo ${(F)${(o)_package_loaded}}
elif (( longlist ))
then
  # Display long list of loaded packages (in order executed)
  local name
  for name in $_package_loaded
  do
    echo "package $name"
  done
elif (( examine ))
then
  # Return true if package loaded
  [[ -n $_package_loaded[(r)$package] ]]
  return
else
  local setupfile=$ZCONFIGDIR/package/$package/setup
  
  if [[ -z $_package_loaded[(r)$package] ]]
  then
    if [[ -r $setupfile ]]
    then
      [[ -n $ZCONFIGDEBUG ]] && echo "Loading package $package"
      _package_loaded=($_package_loaded $package)
  
      # Define each package setup file into a function and call that. This gives much more
      # meaningful output when profiled
      local fn=_package_${package//\\//_}
      function $fn {
	. $setupfile
      }
      $fn
      unfunction $fn  
    else
      echo "Package $package does not exist" 1>&2
      return 1
    fi
  elif (( !ignoreduplicate ))
  then
    echo "Package $package already loaded" 1>&2
    return 1
  fi
fi

return 0
