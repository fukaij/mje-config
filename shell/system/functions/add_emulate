# ZSH function file
# Add emulate command to start of function. Allows use of scripts to load functions for other
# shells unchanged, and later can edit the function to force zsh to emulate the correct shell.
# NB. emulate is always passed -L for local changes
#
# $Id: add_emulate,v 1.4 2001/07/31 11:21:55 mebourne Exp $

local -a args
args=($argv[*])
local -A opts
parse_opts args opts - 2 <<'EOF' || return 1
add_emulate [options] <shell> <function-name> ...
  -h, --help			Provide this help
				# help | h
  -R, --full-reset		As for builtin emulate -R (reset more options to defaults)
				# fullreset = full-reset | R = constant=-R
EOF

local shell=$args[1]
local -a funcnames
funcnames=($args[2,-1])

local funcname
for funcname in $funcnames
do
  if [[ -n $functions[$funcname] ]]
  then
    functions[$funcname]="emulate -L $opts[fullreset] $shell
$functions[$funcname]
"
  fi
done
