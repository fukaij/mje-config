# ZSH configuration file
# Executed for login shells via zprofile
# Generic system-wide setup for login shells. Primarily to set environment vars just once
# Written by Martin Ebourne
#

# Remove . from PATH since it is the work of the devil
path=(${path:#.})

# Set up standard paths
path=($HOME/local/bin/$(uname -m) $HOME/local/bin /usr/local/bin $path)
ld_library_path=($ld_library_path $HOME/local/lib)

# If there's no MANPATH then try and set it from the manpath command
if [[ -z $MANPATH ]] && whence manpath >/dev/null
then
  MANPATH=$(manpath)
fi
manpath=($HOME/local/man /usr/local/man $manpath)

infopath=($HOME/local/info /usr/local/info $infopath /usr/info /usr/share/info)

# Set HOSTNAME unless it already is
export HOSTNAME=${HOSTNAME:-$(/bin/hostname)}

# Force the default shell to be zsh (== intended)
export SHELL==zsh

# Setup for less if present. PAGER is for man
if [[ $(whence -p less) == /* ]]
then
  export LESSOPEN="|lesspipe.sh %s"
  export LESS="-M -e -i -R -X -PM?f%f:<stdin>. ?n?m(file %i of %m) ..?ltlines %lt-%lb?L/%L. : byte %bB?s/%s. .?e(END) ?x- Next\: %x.:?pB%pB\%..%t$"
  export LESSEDIT="%E --no-wait ?lm+%lm. %f"
  export PAGER="less -s  -PM'<man page> ?ltlines %lt-%lb?L/%L. : byte %bB?s/%s. .?e(END):?pB%pB\%..%t'"
fi

# If DISPLAY is not set then have a go from 'who am i', unless no tty in which case it
# won't work
if [[ -z $DISPLAY && -n $TTY ]]
then
  local whoami="$(who am i)"
  if [[ $whoami == *\(*\)* ]]
  then
    setopt local_options extended_glob
    export DISPLAY=${whoami/#(#b)*\((*)\)*/$match[1]}
    case $DISPLAY in
      "")	DISPLAY="localhost:0";;
      :*)	DISPLAY="localhost$DISPLAY";;
      *:*)	;;
      *)	DISPLAY="$DISPLAY:0";;
    esac
  fi
fi

# Set up the color-ls environment variables:

# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed
# Text color codes:
# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white
# Background color codes:
# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white

# no=default, fi=file, di=directory, ln=link, pi=named pipe (FIFO), so=socket
# bd=block device, cd=char device, ex=executable, mi=missing file, or=orphanned symbolic link
LS_COLORS='no=00:fi=38;5;11:di=38;5;14'
LS_COLORS=$LS_COLORS':ln=38;5;214:or=38;5;0;48;5;214:mi=37;41'
LS_COLORS=$LS_COLORS':pi=38;5;218:so=38;5;218:bd=38;5;218:cd=38;5;218'

# Executables (green)
LS_COLORS=$LS_COLORS':ex=38;5;10:*.bat=38;5;10:*.com=38;5;10:*.cmd=38;5;10:*.exe=38;5;10'

# Archived or compressed files (white)
LS_COLORS=$LS_COLORS':*.arj=38;5;15:*.lzh=38;5;15:*.tar=38;5;15:*.tgz=38;5;15:*.taz=38;5;15'
LS_COLORS=$LS_COLORS':*.Z=38;5;15:*.z=38;5;15:*.gz=38;5;15:*.zip=38;5;15'
LS_COLORS=$LS_COLORS':*.rpm=38;5;15:*.deb=38;5;15'

# Object files (blue)
LS_COLORS=$LS_COLORS':*.a=38;5;12:*.o=38;5;12:*.d=38;5;12:*.elc=38;5;12:*.pyc=38;5;12:*.zwc=38;5;12'

# Core files (bold red)
LS_COLORS=$LS_COLORS':*core=01;38;5;9'

# Backup files (grey)
LS_COLORS=$LS_COLORS':*~=38;5;245:*.flc=38;5;245'

# we would like to do these too but i can't get it to do it
#LS_COLORS=$LS_COLORS':#*#=38;5;245:.#*=38;5;245'

export LS_COLORS

# Set paths for Perl config if it can be found
local perldir="${ZCONFIGDIR:h}/perl"
if [[ -d $perldir ]]
then
  path=($perldir/programs $path)
  perllib=($perldir/lib $perllib)
fi
