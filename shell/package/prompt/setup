# ZSH configuration file
# Executed when the prompt package is included
# Setup for prompt package
# Written by Martin Ebourne
#
# $Id: setup,v 1.10 2001/05/09 14:33:49 mebourne Exp $

add_functions_directory package/prompt/functions

# Set up the default prompt colours
typeset -gA prompt_colours
typeset -g prompt_colour_start prompt_colour_end

# Colour control code sequence for xterm is ESC [ <values> m
prompt_colour_start=$'\e'"["
prompt_colour_end="m"

# These are very dark
prompt_colours=( dark_red	"38;5;130"
		 dark_green	"38;5;28"
		 dark_magenta	"38;5;132"
		 dark_yellow	"38;5;142"
		 dark_cyan	"38;5;73"
		 grey		"38;5;243"
		 white		"38;5;15"
		 normal		"00"
		 bold		"01"
	       )

# These aren't very dark
prompt_colours=( dark_red	"38;5;214"
		 dark_green	"38;5;2"
		 dark_magenta	"38;5;13"
		 dark_yellow	"38;5;3"
		 dark_cyan	"38;5;6"
		 grey		"38;5;247"
		 white		"38;5;15"
		 normal		"00"
		 bold		"01"
	       )

# These are inbetween
prompt_colours=( dark_red	"38;5;172"
		 dark_green	"38;5;34"
		 dark_yellow	"38;5;184"
		 dark_magenta	"38;5;176"
		 dark_cyan	"38;5;80"
		 red		"38;5;1"
		 green		"38;5;2"
		 yellow		"38;5;3"
		 blue		"38;5;4"
		 magenta	"38;5;5"
		 cyan		"38;5;6"
		 grey		"38;5;243"
		 white		"38;5;15"
		 normal		"00"
		 bold		"01"
	       )

# Declare work variables
typeset -g _prompt_pwd _prompt_gap _prompt_justify _prompt_edit
typeset -g _prompt_wrapmode=0 _prompt_clearline _prompt_columns=$COLUMNS

# Cache terminal handling of line wrapping
if [[ $(echotc am 2>/dev/null) != yes || $(echotc xn 2>/dev/null) == yes ]]
then
  _prompt_wrapmode=1
fi

# Cache termcap code for clearing line
_prompt_clearline=$(echotc ce)

# Register our hooks
add_to_hook precmd _prompt_precmd
add_to_hook preexec '_prompt_preexec "$1"'
add_to_hook TRAPWINCH _prompt_winch

# Fake resize event to force setup
_prompt_winch

# Remap ZLE clear-screen widget (Ctrl-L) to a modified version
zle -N clear-screen _prompt_clear_screen


## Now we configure the default prompts

# Configure the above line prompt
set_prompt prompt_above
add_to_prompt {dark_red} '%$COLUMNS>>$USERNAME' {grey} '@' {dark_green} '%m'
if (( SHLVL > 2 ))
then
  add_to_prompt {grey} '  #$[SHLVL-2]'
fi
#add_to_prompt {dark_red} '%(?..  [%?${signals[$?-127]:+ $signals[$?-127]}])'
add_to_prompt {dark_magenta} '${_sql_prompt:+  $_sql_prompt}'
add_to_prompt {dark_yellow} '${CLEARCASE_VIEW:+  $CLEARCASE_VIEW}'
add_to_prompt {dark_cyan} '  $_prompt_pwd'
add_to_prompt '$_prompt_justify'
add_to_prompt {grey} '  %D{%a %f %b %Y %H:%M:%S}' {white}

# Configure the left hand prompt
set_prompt PROMPT {bold} '%# ' {normal}

# Configure our special right hand prompt which is printed when the command has been entered
set_prompt prompt_right {grey} '%D{%a %f %b %Y %H:%M:%S}' {white}

# Disable the standard ZSH right hand prompt
set_prompt RPROMPT

# Configure the secondary prompt
set_prompt PROMPT2 {bold} '%_> ' {normal}

# Configure the prompt used for execution tracing (set -x). Includes timestamp & seconds for
# profiling
set_prompt PROMPT4
add_to_prompt {grey} ': ' {dark_green} '%N' {grey} ':' {dark_yellow} '%i'
add_to_prompt {grey} ' %D{%H:%M:%S} {$SECONDS} ; ' {white}
