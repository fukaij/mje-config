#compdef sql
# ZSH function file
# Written by Martin Ebourne
# Part of the SQL base package
# Completion code for sql command
# Usage: These functions are used by the completion code
#
# $Id: _sql,v 1.6 2001/06/08 15:11:28 mebourne Exp $

_sql () {
  local -A tables
  local currentstate=0

  local word table state=900 index=1
  for word in $words
  do

    word=${${word#\(}%\)}
    case $word in
      delete)	state=111;;
      insert)	state=112;;
      update)	state=113;;
      into)	state=122;;
      table)	state=124;;
      view)	state=125;;
      order)	state=191;;
      group)	state=192;;
      select)	state=200;;
      where)	state=300;;
      having)	state=300;;
      by)	state=400;;
      set)	state=500;;
      from)	case $state in
		  111) state=121;;
		  *)   state=102;;
		esac;;
      ,)	(( state == 103 )) && state=102;;
      *)	local comma=0
		if [[ $word == *, ]]
		then
		  comma=1
		  word=${word%,}
		fi

		case $state in
		  102)	if (( comma ))
			then
			  tables[$word]=$word
			else
			  table=$word
			  state=103
			fi;;
		  103)	tables[$word]=$table
			table=""
			state=102;;
		  11?)	tables[$word]=$word
			(( state = state + 20 ));;
		  12?)	tables[$word]=$word
			(( state = state + 10 ));;
		  1*)	state=0;;
		esac
		;;
    esac

    if (( state != 103 && $#table ))
    then
      tables[$table]=$table;
      table=""
    fi

    (( index = index + 1 ))
    if (( index == CURRENT ))
    then
      currentstate=$state
    fi

  done

  if (( state == 103 && $#table ))
  then
    tables[$table]=$table;
    table=""
  fi


  #echo "tables=${(kv)tables}"
  #echo "state=$currentstate"

  local ret=1
  case $currentstate in
    900)	_wanted sql expl 'SQL reserved words' compadd select delete insert update create drop && ret=0
		_sql_complete_proc_names && ret=0;;
    102)	_sql_complete_table_names && ret=0;;
    103)	;;
    111)	_wanted sql expl 'SQL reserved words' compadd from && ret=0
		_sql_complete_table_names && ret=0;;
    112)	_wanted sql expl 'SQL reserved words' compadd into && ret=0
		_sql_complete_table_names && ret=0;;
    113|12?)	_sql_complete_table_names && ret=0;;
    131)	_wanted sql expl 'SQL reserved words' compadd where && ret=0;;
    132)	_wanted sql expl 'SQL reserved words' compadd values && ret=0;;
    133)	_wanted sql expl 'SQL reserved words' compadd set && ret=0;;
    191)	_wanted sql expl 'SQL reserved words' compadd by && ret=0;;
    192)	_wanted sql expl 'SQL reserved words' compadd by && ret=0;;
    2*|3*|4*|5*)
		if [[ $PREFIX == *.* ]]
		then
		  local tablealias="${PREFIX%%.*}"
		  if (( $+tables[$tablealias] ))
		  then
		    _sql_complete_column_names -p $tablealias $tables[$tablealias] && ret=0
		  fi
		else
		  _wanted table-alias expl 'table aliases' compadd -S. ${(k)tables} && ret=0
		  _sql_complete_column_names $tables && ret=0
	        fi
		;;
  esac

  return $ret
}

_sql "$@"
