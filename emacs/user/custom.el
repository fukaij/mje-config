;; Emacs configuration file
;; Custom definitions
;; Written by Martin Ebourne
;; $Id: custom.el,v 1.1 2001/05/11 17:31:38 mebourne Exp $

(custom-set-variables
 '(browse-url-browser-function (quote browse-url-w3))
 '(initial-scratch-message nil)
 '(jde-auto-parse-buffer-interval 30)
 '(jde-bug-jdk-directory "/opt/jdk-1.2.2")
 '(jde-bug-jpda-directory "/home/ebourm/local/sun4u/jpda")
 '(jde-build-use-make t)
 '(jde-db-debugger (quote ("jdb" "" . "Executable")))
 '(jde-db-option-application-args (quote ("-d /home/ebourm/cruise/config/debug/default.xml")))
 '(jde-db-option-vm-args nil)
 '(jde-db-source-directories (quote ("/homedir/ebourm/cruise/java" "/opt/jdk-1.2.2/src")))
 '(jde-enable-abbrev-mode nil)
 '(jde-gen-cflow-case (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"case\")" "'(l 'n \"case \" (p \"value: \") \":\"'>'n" "\"{\"'>'n" "\"}\"'>'n" "\"break;\"'>'n'>'p)" ")")))
 '(jde-gen-cflow-else (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"else\")" "'(l '> \"else\" (p \"\" empty) \"if()\"'>'n" "\"{\"'>'n'" "\"}\"'>)" ")")))
 '(jde-gen-cflow-for (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"for\")" "'(l '> \"for(\" (p \"for-clause: \" clause) \")\"'>'n" "\"{\"'>'n" "\"}\"'>)" ")")))
 '(jde-gen-cflow-for-i (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"fori\")" "'(l '> \"for(int \" (p \"variable: \" var) \"=0;\"" "(s var)" "\"<\"(p \"upper bound: \" ub)\";\" (s var) \"++)\"'>'n" "\"{\"'>'n" "\"}\"'>)" ")")))
 '(jde-gen-cflow-if (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"if\")" "'(l '> \"if(\" (p \"if-clause: \" clause) \")\"'>'n" "\"{\"'>'n'" "\"}\"'>)" ")")))
 '(jde-gen-cflow-if-else (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"ife\")" "'(l '> \"if(\" (p \"if-clause: \" clause) \")\"'>'n" "\"{\"'>'n" "\"}\"'>'n" "'> \"else\"'>'n" "\"{\"'>'n" "\"}\"'>)" ")")))
 '(jde-gen-cflow-switch (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"switch\")" "'(l '> \"switch(\" (p \"switch-condition: \" clause) \")\"'>'n" "\"{\"'>'n'" "\"case \" (p \"first value: \") \":\"'>'n" "\"{\"'>'n" "\"}\"'>'n" "\"break;\"'>'n'>'p'n" "\"default:\"'>'n'" "\"{\"'>'n" "\"}\"'>'n" "\"}\"'>)" ")")))
 '(jde-gen-cflow-while (quote ("(if (jde-parse-comment-or-quoted-p)" "'(l \"while\")" "'(l '> \"while(\" (p \"while-clause: \" clause) \")\"'>'n" "\"{\"'>'n" "\"}\"'>)" ")")))
 '(jde-gen-k&r nil)
 '(jde-global-classpath (quote ("/home/ebourm/cruise/build" "/home/ebourm/cruise/3rdparty/libraries/jdom.jar" "/home/ebourm/cruise/3rdparty/libraries/xerces.jar" "/home/ebourm/cruise/3rdparty/libraries/log4j-full.jar" "/home/ebourm/cruise/3rdparty/libraries/test.jar" "/opt/jConnect-5.2/classes/jconn2.jar")))
 '(jde-help-docsets (quote (("javadoc" "/home/ebourm/local/javadoc/java" nil) ("javadoc" "/home/ebourm/local/javadoc/log4j" nil))))
 '(jde-imenu-sort (quote asc))
 '(jde-jdk-doc-url "http://java.sun.com/j2se/1.3/docs/index.html")
 '(jde-make-args "-k")
 '(jde-make-working-directory "/homedir/ebourm/cruise/java/com/gs/fw/reg/cruise/")
 '(jde-project-context-switching-enabled-p nil)
 '(jde-run-application-class "com.gs.fw.reg.cruise.systemserver.SystemServer")
 '(jde-run-classic-mode-vm t)
 '(jde-run-executable "/homedir/ebourm/cruise/bin/cruiseSystemServer")
 '(jde-run-working-directory "/home/ebourm/cruise/java/com/gs/fw/reg/cruise")
 '(jde-use-font-lock nil)
 '(jde-wiz-import-excluded-packages (quote ("bsh.*" "java.lang.*")))
 '(speedbar-frame-parameters (quote ((minibuffer) (width . 60) (border-width . 0) (menu-bar-lines . 0) (unsplittable . t) (top . 0) (left . 734) (user-position . t))))
 '(speedbar-obj-do-check nil)
 '(speedbar-tag-hierarchy-method (quote (speedbar-trim-words-tag-hierarchy speedbar-prefix-group-tag-hierarchy speedbar-sort-tag-hierarchy)))
 '(speedbar-vc-do-check nil)
 '(url-automatic-caching t)
 '(url-be-asynchronous t)
 '(url-honor-refresh-requests (quote (quote ask)))
 '(url-keep-history t)
 '(url-privacy-level (quote (email lastloc)))
 '(url-proxy-services (quote (("http" . "proxyext.web.gs.com:82"))))
 '(visible-bell t)
 '(w3-user-colors-take-precedence nil)
 )
